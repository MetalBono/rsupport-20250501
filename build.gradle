plugins {
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.jetbrains.kotlin.jvm' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.25'
    id 'org.jetbrains.kotlin.kapt' version '1.9.25'
}

group = 'com.rsupport.pretest'
version = '0.0.1-SNAPSHOT'

ext {
    queryDslVersion = '5.1.0'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    kapt "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.redisson:redisson-spring-boot-starter:3.46.0'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'
    runtimeOnly 'com.mysql:mysql-connector-j'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.kotest.extensions:kotest-extensions-spring:1.3.0'
    testImplementation 'io.kotest:kotest-runner-junit5:5.9.1'
    testImplementation 'io.kotest:kotest-assertions-core:5.9.1'
    testImplementation 'com.ninja-squad:springmockk:4.0.2'
    testImplementation 'io.mockk:mockk:1.13.13'
    testRuntimeOnly 'com.h2database:h2'
}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

allOpen {
    annotation 'jakarta.persistence.Entity'
    annotation 'jakarta.persistence.MappedSuperclass'
    annotation 'jakarta.persistence.Embeddable'
}
